Title:   swift

Title 2: User Guide

Seq:     11

Tags:

Link:

Body:


<a name="intro"><h2>Intro</h2></a>

The following sections contain detailed instructions on the use of Notenik for the Mac, starting with basic concepts and the most common functions, and proceeding on to more complex operations. 


<a name="table-of-contents"><h2>Table of Contents</h2></a>

1. [Motivations](#motivations)
2. [The Notenik Application](#the-notenik-application)
3. [Help Using Notenik](#help-using-notenik)
4. [Each Note has a Title and a Body](#each-note-has-a-title-and-a-body)
5. [Each Note is its own Text File](#each-note-is-its-own-text-file)
6. [Notes are Collected into Folders](#notes-are-collected-into-folders)
7. [Add, Delete and Update Your Notes](#add-delete-and-update-your-notes)
8. [View Your Notes as a List](#view-your-notes-as-a-list)
9. [Sync Your Notes](#sync-your-notes)
10. [Format the Body of a Note using Markdown](#format-the-body-of-a-note-using-markdown)
11. [Add Other Fields to Your Notes](#add-other-fields-to-your-notes)
12. [Supported Variations in Text File Formats](#supported-variations-in-text-file-formats)
13. [Organize Your Notes with Tags](#organize-your-notes-with-tags)
14. [Add a Link Field to Make a Bookmark](#add-a-link-field-to-make-a-bookmark)
15. [Override Default Fields with a Template file](#override-default-fields-with-a-template-file)
16. [A Note File Template](#a-note-file-template)
17. [Sequence Your Notes](#sequence-your-notes)
18. [Track the Status of Your Notes](#track-the-status-of-your-notes)
19. [Date Your Notes](#date-your-notes)
20. [Specify Date Recurs Rules](#specify-date-recurs-rules)
21. [Track Your Tasks](#track-your-tasks)
22. [Add Code Snippets to Your Notes](#add-code-snippets-to-your-notes)
23. [Track Authors and Artists](#track-authors-and-artists)
24. [Timestamp Your Notes](#timestamp-your-notes)
25. [Add Links Between Notes](#add-links-between-notes)
26. [Search for One or More Notes Containing Specified Text](#search-for-one-or-more-notes-containing-specified-text)
27. [Use Other Special Fields](#use-other-special-fields)
28. [Attach Files to Your Notes](#attach-files-to-your-notes)
29. [Use Report Templates](#use-report-templates)
30. [Record and Play Scripts](#record-and-play-scripts)
31. [Copy, Cut, Paste and Share your Notes](#copy-cut-paste-and-share-your-notes)
32. [Import and Export Your Notes](#import-and-export-your-notes)
33. [Favorites to HTML](#favorites-to-html)
34. [Open Parent Realm](#open-parent-realm)
35. [Disk Access Permissions](#disk-access-permissions)
36. [Website Building](#website-building)
37. [View the Log](#view-the-log)
38. [Keyboard Shortcuts](#keyboard-shortcuts)
39. [Files and Folders](#files-and-folders)
40. [Rights](#rights)
41. [Support](#support)
42. [Version History](#version-history)


<a name="motivations"><h2>Motivations</h2></a>

I'll start off by explaining my primary motivations behind the creation of Notenik.
1. I love notes. I like being able to write down some words -- a few or a bunch -- about something that interests me and then refer back to them later. 

2. I like the simplicity and flexibility of notes. 

3. I want to store my notes in an open, non-proprietary format that I can easily write, read and understand, but also in a format that can be usefully manipulated by a number of software tools. 

4. I want my notes to be portable. I want to be able to easily move them around from one device to another, from one platform to another, without losing anything in the process.   

5. I want my notes to be durable. I don't want to have to worry about  being unable to read them a few years down the road because some piece of software is no longer available or some "free" service has gone out of business. 

6. I want some basic application software for working with my notes to be open-source and available on as many platforms as possible. 

7. I want to be able to organize my notes in a variety of useful ways. 

8. I want to be able to usefully extend this basic idea of a note in as many ways as possible, while still remaining true to all of my motivations above. 

9. I want a simple, sturdy user interface that I can apply to as much stuff as possible. 

I'm sharing these motivations upfront because, if these same ideas appeal to you, then there's a good chance it will be worth your while to read a bit further. On the other hand, if you have different sorts of interests, then it's probably best to just stop now and find another piece of software to explore. 


<a name="the-notenik-application"><h2>The Notenik Application</h2></a>

This version of Notenik is written in [Swift](https://swift.org) and is available from the [Mac App Store](https://apps.apple.com/us/app/notenik/id1465997984?mt=12).

This version was written using the [Xcode IDE](https://developer.apple.com/xcode/). Source can be found on [GitHub](https://github.com/hbowie/notenik-swift). 

From this point on, I'll introduce one concept at a time. 


<a name="help-using-notenik"><h2>Help Using Notenik</h2></a>

You're already reading this intro, so obviously I don't need to tell you how to find this.
But here's a few other help items that are available, including some that may not be so obvious. 

This User Guide is available as a web page from the [Notenik](http://www.notenik.net) site and from the Notenik Help Menu. 

But the same content is also available as a Collection of Help Notes, by selecting the corresponding Open Command from Notenik's Help menu. You may find it a little easier to read and navigate in this form, plus you can practice using Notenik as you read the Intro!


<a name="each-note-has-a-title-and-a-body"><h2>Each Note has a Title and a Body</h2></a>

In its most basic form, a Note consists of a Title and a Body. 

A Title consists of a few words telling you what the Note is about. 

The Body consists of the text of the Note, containing as many words as you like.

If no Title is specified within a Note file, then the file name (without the extension) will be used as the Title of the Note. 


<a name="each-note-is-its-own-text-file"><h2>Each Note is its own Text File</h2></a>

Each Note is stored as a separate text file, in the [UTF-8](https://en.wikipedia.org/wiki/UTF-8) format, capable of being read and modified by any text editor, on almost any computer system in the world.

The file name is generally identical to the Note's title, with the exception of a few occasional tweaks to avoid running afoul of various common operating system limitations. 

Any of the following file extensions may be used:

* .markdown
* .md
* .mdown
* .mdtext
* .mkdown
* .nnk
* .notenik
* .text
* .txt

The two preferred extensions are '.txt' (short for text) and '.md' (short for markdown -- more on this later). 

Use the Text Edit Note command under the Note menu to open the currently displayed Note in your default text editor. When you're done with your external edits, and have saved the file, use the Reload Note command to see the results of your external edits within Notenik. 


<a name="notes-are-collected-into-folders"><h2>Notes are Collected into Folders</h2></a>

Each Note is part of a Collection, and each Collection is stored in its own folder (aka directory). Each Note within a Collection must have its own unique Title. 

You can organize your Notes into as many Collections as you would like, and store each Collection wherever you would like. 

The Notenik application can open multiple Collections at a time, each in its own window. The Open Recent command under the File menu provides easy access to recently opened Collections. 

You may use a command under the File menu to designate the current Collection as your Essential Collection. Once identified, this will be the first Collection opened each time the application launches.  

The Save As command under the File menu allows you to save an entire Collection in a new location, with the option to either keep the current location (effectively making a copy) or to delete it (effectively moving the Collection to a new location). 

Note that Notenik does not make any assumptions about how you wish to name your Notenik folders. When creating a new Collection, or using Save As to save your current Collection to a new location, Notenik expects you to create and appropriately name a new folder that will contain your Collection. In other words, you should not simply select an existing folder with the expectation that Notenik will then create a subfolder to store your Collection.

You might want to use the New command on the File menu to create your first Collection now, if you don't already have one created. 


<a name="add-delete-and-update-your-notes"><h2>Add, Delete and Update Your Notes</h2></a>

The Display tab shows you what your Note looks like. Your note is formatted as a web page, and displayed within Notenik using a built-in web browser. If you click on a hyperlink within the display, then the linked page will replace your Note. If you wish to get back to your Note, then click on the Refresh button in the Toolbar. If your Note has a Link value, then click on the Launch Link button in the Toolbar to see the linked page within your default web browser, instead of Notenik's internal browser.
The Edit tab lets you make changes to the Field Values of a Note. 

Use the '+' (plus) sign on the Toolbar to clear the Field Values and prepare to Add a new Note. 

Use the '-' (minus) sign on the Toolbar to delete the currently selected Note. 

Click on the OK button on the Toolbar, or click on the Display tab, to complete and save your latest entries on the Edit tab. 

The Note Menu also has equivalent commands, with keyboard shortcuts, to add a New Note or Delete a Note. 

You can alter the typeface and font size used on the Display tab by selecting the Display Appearance item under the Format menu, or by clicking on the Display Fonts button on the toolbar. You may then pick a typeface and font from the displayed dropdown menus or, if you'd like, enter the CSS you'd like to be used directly, bypassing the limits of these menus. 

You may also alter the font size used on the Edit tab through use of the commands available to you under the View menu. 


<a name="view-your-notes-as-a-list"><h2>View Your Notes as a List</h2></a>

The first half of the Notenik display shows all the Notes in your current Collection as a simple list, initially sorted by Title.
You can navigate through this list using some of the buttons on the Toolbar:

- The Home button takes you to the first Note.
- '<' Takes you to the prior note.
- '>' Takes you to the next note. 

Some of the same navigational commands are available under the Note menu, with handy keyboard shortcuts noted on the right. There you will also find a command to scroll the list so as to bring the currently selected Note into view at the top of the displayed Notes. 


<a name="sync-your-notes"><h2>Sync Your Notes</h2></a>

Since a Collection of Notes lives on your local storage as a folder full of text files, it can be easily synced to the cloud and/or to other devices via a service such as [Dropbox](http://www.dropbox.com) or [iCloud](http://www.apple.com/icloud/icloud-drive/). Simply store your Collection somewhere in your Dropbox folder, or in your iCloud Drive folder. 


<a name="format-the-body-of-a-note-using-markdown"><h2>Format the Body of a Note using Markdown</h2></a>

[Markdown](http://daringfireball.net/projects/markdown/) is a simple syntax for formatting plain text files so that they can be easily read and written by humans, but also can easily be converted into HTML for use on the Web. If you'd like, you can use the Markdown syntax for formatting the body of each note. But it's not required. 

When you view a Note on the Display tab, you will see the Body Field Value converted to HTML using a Markdown parser. If you haven't used any special Markdown formatting, then the text will simply appear as you entered it. 

Notenik uses the [Down](https://github.com/iwasrobbed/Down) parser as the default for conversion of Markdown to HTML, but [Ink][] may be specified as an alternate on the Markdown tab of the Application preferences.



<a name="add-other-fields-to-your-notes"><h2>Add Other Fields to Your Notes</h2></a>

I've said that, at their most basic, each Note consists of a Title Field and a Body Field. But each Note can actually contain any number of fields.

Each Field in a Note consists of the Field's Label, followed by a colon and one or more spaces, followed by the Field's Value.

In other words, something like this:

	Title: This is a Sample Note

Field Labels must follow a few rules. A Field Label must always start at the beginning of a line. A Field Label may not consist of more than 48 characters, and may not contain a comma, brackets or parentheses. 

The Field Value may be specified on the same line, and/or on one or more following lines.

The Body Field, if present, will always be the last Field in a Note, since all following text will be assumed to be part of the Body (even if it contains strings of text that might otherwise appear to be additional Field Labels).

Each Field Label may be considered to have a *proper form* (including capitalization, spaces and punctuation), and a *common form* (the proper form without capitalization, whitespace or punctuation). The common form is considered to be the key identifier for the Field, so that any variations of the Label that include the same letters and digits in the same sequence will be considered equivalent.

The Notenik approach to identifying fields within a Note is very similar to the [Multimarkdown metadata syntax](http://fletcher.github.io/MultiMarkdown-4/metadata.html), and also similar to [YAML](https://en.wikipedia.org/wiki/YAML). 


<a name="supported-variations-in-text-file-formats"><h2>Supported Variations in Text File Formats</h2></a>

To better support users with existing collections of notes stored in text files, Notenik makes its best effort to recognize and appropriately handle the following variations on the normal Notenik format. 

1. Markdown - The first line of the file contains a Markdown level 1 heading, which is to be used as the Note's title. The remainder of the file makes up the body. No metadata, and no field labels. 

2. MultiMarkdown - The file may start with metadata, including a title, but there is no explicit label identifying the start of the body; instead, the first blank line indicates the end of the metadata and the start of the body. 

3. Plain Text - The title is taken from the file name, and the entire contents of the file makes up the body. No metadata, and no field labels.  

Note that these three formats differ from the normal Notenik format in one or more of the following ways:

* While Notenik will create a Note's file name from its title, Notenik expects the title of the note to be explicitly identified in the first line of the file, as in the following example:

		Title: Supported Variations in Text File Formats

* Notenik will generally write out a blank line between fields, to aid in readability, which means that the beginning of the body is not triggered by the first blank line. 

* Notenik will explicitly identify the start of the Note's body with a body label, as in the following example:

		Body: 

Notenik will generally be able to determine which of these variations is being used based on the contents of the first few lines of the text file. 

Notenik will also attempt to respect these variations when modifying an existing Note, keeping each Note in its original format. 


<a name="organize-your-notes-with-tags"><h2>Organize Your Notes with Tags</h2></a>

The Tags Field offers another way to organize the Notes within a Collection.
Tags may be used to group related notes into categories. One or more tags may be associated with each note, and each tag may contain one or more sub-tags. A period or a slash may be used to separate one level of a tag from the next level, with the period being preferred. A comma or a semi-colon may be used to separate one tag from another, with the comma being preferred.

Click on the Tags tab to see your Notes organized by tags, instead of appearing in a straight List. If a Note has multiple Tags assigned, then it will appear multiple times on the Tags tab, once for each Tag. By adding multiple levels to your Tags, you can effectively organize your Notes into an outline.

Beneath the Collection menu you will find an option to perform a Tags Mass Change. The user will be prompted to specify from tags and to tags, and Notenik will then replace the from tags (in combination, if more than one is specified) with the to tags. 


<a name="add-a-link-field-to-make-a-bookmark"><h2>Add a Link Field to Make a Bookmark</h2></a>

A Link Field within Notenik is intended to hold a URL: a hyperlink to a location on the Web (or to a local file, if you'd prefer to use it that way).
You can easily Launch a link from within Notenik by clicking on the Launch Link button in the Toolbar, or by selecting Launch Link under the Note menu, or by using the keyboard shortcut CMD-L. 

Adding a Link to a Note doesn't necessarily reduce the Note to a simple Bookmark, but this is certainly one way to use a Collection of Notes. 

Note that if you use a Link to point to a local folder containing another Notenik Collection, then Launching that Link will result in opening the linked Collection within Notenik.

You may use the Set Local Link command under the Note menu to choose a file or folder to be linked; the resulting 'file:///' style of URL will then replace any value previously stored in the Link field for the current Note. 


<a name="override-default-fields-with-a-template-file"><h2>Override Default Fields with a Template file</h2></a>

By default, Notenik shows only four Fields for a Note: Title, Link, Tags and Body. However, this default may be altered by placing a file named 'template.txt' or 'template.md' within a Collection's folder. Such a file should be in the normal Notenik format, although the Field Labels specified need not have any accompanying values. When such a template file is found, the field names found in this file will be used as the fields to be displayed and maintained for that Collection, overriding the default four.
You may use the Preferences command under the Collection menu to modify the template for the current Collection. Just put a check mark next to whichever fields you'd like to use for that particular Collection. Then click on the OK button to save your template with the indicated fields. 

You can also use any text editor to modify the sample template file to reflect the fields you desire for that Collection. 

When creating a new Collection, you will be presented with the Collection Preferences window automatically, to give you a chance to customize the fields to be used for that new Collection. 

The file extension used for the template file will be used as the file extension for Notes subsequently created within the Collection. 

By specifying the value `<longtext>` as the value for a field in a template file, the user can indicate that a field is to be treated as a long text field, rather than a one-line text field. A longtext field will provide the user with multiple lines for data entry on the Edit tab, and will honor Markdown syntax when formatting for display on the Display tab. 


<a name="a-note-file-template"><h2>A Note File Template</h2></a>

Following is a sample Note file, showing all of the Fields that Notenik treats as special in some way. Feel free to copy and paste to create a template file, as described in the previous section. 

    Title:  The unique title for this note

    Author: The author of the Note

    Date:   2016-12-13

    Status: 0 - Suggested

    Type:   The type of note

    Seq:    Rev Letter or Version Number

    Tags:   One or more tags, separated by commas

    Link:   http://notenik.com

    Rating: 5

    Index:  Index Term 1;

    Code: 

    A block of programming code

    Teaser:

    A brief sample of the note

    Body:

    The substance of the note


<a name="sequence-your-notes"><h2>Sequence Your Notes</h2></a>

Add a Seq Field to a Collection (using a template file) in order to specify a sequence number, revision letter, version number or priority to be associated with each Note.

A Seq field may contain letters, digits and one or more periods (aka decimal points) or hyphens or a dollar sign ('$'). 

You may wish to assign a unique Seq value to each Note in a Collection, but Notenik does not require this (in other words, it does allow duplicate Seq values to be assigned to different Notes). 

If you'd like to see your Notes listed in sequence by their assigned number, you can use the Sort Menu to change the sequence of the displayed list from Title to Seq + Title. Use the Reverse option to see them in descending sequence. 

If you want to insert a new note with a Seq Value already assigned to another Note, then first select the other Note, then use the Increment command under the Note menu to increment the Seq field of the existing note, as well as following notes that might otherwise cause duplicate Seq values. 

To add a new Note with the next available Seq value, first select the last note in the list (the one with the highest seq field) and then add a New Note in the normal manner. 

Note that field names beginning with "Seq" will be treated as Seq fields for the purpose of sorting when using the Scripting Engine. This will cause numeric fields, for example, to sort into their proper numeric sequence, instead of treating them as alphanumeric fields. 


<a name="track-the-status-of-your-notes"><h2>Track the Status of Your Notes</h2></a>

Add an optional Status Field to your Collection, indicating each Note's degree of completion, and you have a basic To Do List. 

Status values are usually selected from the following standard list. Note that each status may be represented by a single digit and/or an associated label. The digits serve to place the values into an approximate life cycle sequence.

* 0 - Suggested
* 1 - Proposed
* 2 - Approved
* 3 - Planned
* 4 - Active
* 5 - Held
* 6 - Completed
* 7 - Pending Recurs
* 8 - Canceled
* 9 - Closed

The labels may be modified by placing a series of integer + label pairs in the Value area of the relevant template file, with separating punctuation. Such a template line might look something like this:

	Status: 1 - Idea; 4 - In Work; 9 - Published;

Look under the File menu for an option to Purge Notes that have been Canceled or Completed. You'll be given the option of discarding the purged Notes, or of copying them to another location.


<a name="date-your-notes"><h2>Date Your Notes</h2></a>

Add a Date field to a Collection in order to track the date each note was officially published, or a due date for each note. A date may be expressed in any of a number of common formats. It may also be a partial date, such as a year, or a year and a month. It may or may not contain a specific time of day.

Note that the Date field has several helpful editing tools. You can enter a free-form date yourself, or you can use a Calendar widget to pick dates from a Calendar. You can use the Today button to set the date to Today's date, and you can use the Recurs button to apply the Recurs rule, if one has been supplied. 

If you need to export a Collection in a format suitable for sorting by Date, then you may wish to use the Standardize Dates to YMD command under the Collection menu to make sure that all dates are stored in a yyyy-mm-dd format suitable for sorting. 


<a name="specify-date-recurs-rules"><h2>Specify Date Recurs Rules</h2></a>

Add a Recurs field to a Collection to cause a Date for a Note to recur on a regular basis. 

Specify a recurs rule using normal English, such as "Every 3 months," "Every Tuesday" or "Every Year."

Use the Recurs button on the Date editing row to apply the rule to the current Date associated with the selected Note. 


<a name="track-your-tasks"><h2>Track Your Tasks</h2></a>

Add a Status field, a Seq field, a Date field and a Recurs field to a Collection, and you have all the elements of a personal task management system. 

A Collection such as this can use the Date field to track due dates, and/or the Seq field to track priorities. If desired, use the Tags field to group tasks by context and/or by project. 

If you use the Close Note option under the Note menu, then you can cause the Due Date to recur (if a Recurs field is available), or the Status field to show the task as Completed, if it is not eligible to recur. 

The Sort menu contains two options specific to task tracking. The first option sorts all the Notes in a list by Date and then Seq, while the second option sorts all tasks by Seq and then Date. In both cases, completed tasks sort to the bottom of the list. 

And don't forget the Purge Option under the File menu, which will allow you to purge Cancelled and Completed Notes from a Collection. 


<a name="add-code-snippets-to-your-notes"><h2>Add Code Snippets to Your Notes</h2></a>

Add a Code field to a Collection in order to store a code snippet as part of each Note in that Collection.
The code block you enter in a Code field will be formatted on the Display tab enclosed in HTML pre and code tags, so that line breaks will be honored, and the code will be displayed using a monospaced font. 


<a name="track-authors-and-artists"><h2>Track Authors and Artists</h2></a>

You can specify an Author or an Artist field when using a Collection as some sort of catalog of works by others. For example, I have one Collection that I use to keep track of my favorite Quotations, and the Author field indicates the author of each quotation. I have another Collection where I maintain my thoughts about a series of albums, and use the Artist field to indicate the individual or group responsible for each album. 

In either case, you can use Sort Option # 5 (under the Sort menu) to sort a Collection by Author or Artist. 

When sorting by Author, the sort will be by last name first; if a Collection contains an Artist field, but no Author field, then the sort will be by Artist, and the word 'the' will be ignored when found as the first work in the Artist's name. (In other words, 'The Beatles' will be sorted under 'B', not under 'T'.) 


<a name="timestamp-your-notes"><h2>Timestamp Your Notes</h2></a>

Add a Timestamp field to a Collection in order to generate a timestamp for each Note. Timestamp values are assigned automatically, and are not available for editing within Notenik. Timestamps reflect the original creation date and time for the Note and therefore should never change over the lifecycle of a Note. 

Timestamp values will be generated in a "yyyyMMddkkmmss" format, consisting of:

* 4-digit year
* 2-digit month
* 2-digit day of month
* hour of day, using a 24-hour range
* minute of hour
* second of minute

All of this is normalized to Greenwich Mean Time, and formatted without spaces or punctuation. 

In general, such a field can be used as a unique identifier for each Note in a Collection. 

If you are adding a Timestamp field to an existing Collection, then you should first modify the Collection Preferences to check the box for the Timestamp field, and then execute the Normalize Storage command beneath the Collection menu to set the Timestamp values for the existing Notes. 

Timestamps such as these are often used when creating a *[zettelkasten](https://zettelkasten.de)*.


<a name="add-links-between-notes"><h2>Add Links Between Notes</h2></a>

Notenik allows the user to create a link from one Note to another Note within the same Collection. 

You may create such a link directly by specifying the domain 'https://ntnk.app/' followed by the title of the Note you are linking to.

For example, here's a working link to the [Motivations](#motivations) Note within this Help Collection.  

Note that this is coded within the body of the Note using normal [Markdown syntax for links](https://daringfireball.net/projects/markdown/syntax#link). What makes this a note-to-note link is the special URL prefix of 'https://ntnk.app/'. Links to this domain will be intercepted by Notenik and treated as note-to-note links. The string following this prefix will be treated as either a note Title or, if you [Timestamp your Notes](#timestamp-your-notes), a Timestamp. A link using a Note title will ignore case (upper or lower), spaces and punctuation, so that, for example, a link to the Note titled 'Timestamp Your Notes' may be coded as 'https://ntnk.app/timestamp-your-notes'. 

While this method works, and has the advantage of staying within the normal Markdown syntax, it is not the most convenient approach. As an optional alternative, the user may choose to use the wiki-like syntax of enclosing the title of another Note within double square brackets. 

In order to enable this option, the user must first check the "Double Bracket Parsing for Inter-Note Links" checkbox on the Collection Preferences pane. Once this option has been enabled for a Collection, then a link to another Note may be coded by simply enclosing the title of the target Note (or its timestamp!) within double square brackets. 

For example, here's a working link to the [Motivations](#motivations) note using this syntax. 


<a name="search-for-one-or-more-notes-containing-specified-text"><h2>Search for One or More Notes Containing Specified Text</h2></a>

The Search field on the Toolbar allows you to search for the entered text, and display the first Note containing this text in any field being searched. After finding the first occurrence, you may use the Find Again command under the Note menu to search for the next Note containing the specified text.
The Search function will search each Note's Title, Link, Tags and Body fields for matching text. Case (upper- or lower-) will be ignored for the purposes of the Search. 


<a name="use-other-special-fields"><h2>Use Other Special Fields</h2></a>

You can use whatever Field Labels you want within a Collection, but there are a few other Field Labels that have some special Notenik logic associated with them. 

* Author -- The author(s) of the Note.

* Rating -- Your rating of the note, on a scale of one to five.

* Type -- The type of note. Any values may be used to distinguish between different types of notes within a collection.

* Teaser -- An excerpt from the note used as a teaser in a list of notes. The teaser may be formatted using Markdown.


<a name="attach-files-to-your-notes"><h2>Attach Files to Your Notes</h2></a>

You may also attach any number of files to your Notes. Here's the way this feature works. 

Start by selecting the Note that is to receive the attachments. 

Use the Add Attachment item under the Attachments menu in the Toolbar to add an Attachment to your Note. You will then be prompted to select the file to be attached, and then to specify an optional suffix that can be used to distinguish this attachment from other files attached to the same note. After you supply the requested information, Notenik will copy the indicated file to the "files" folder within your Collection. The file will be given a name that starts with the same name as the Note, followed by the specified suffix, and then followed by the original file extension. The original file will remain as-is. 

Once a Note has attachments, you may open one of them by selecting it from the same Attachments menu in the Toolbar. The request will then be passed on to the operating system, and the attachment will be opened in whatever application is assigned to files of that type. 

If you'd like to delete an Attachment, select the Delete Attachment item under the Note menu. If more than one attachment for that Note exists, then you will be prompted to specify the one you wish to delete. Be aware, though, that when you delete an Attachment, the underlying file in the files folder will be deleted. 

If you change the Title of a Note, then any files attached to the Note will be automaticallly renamed to match the new Title for the Note. 

If you delete a Note, then its attachments (if any) will be deleted as well. 

In case you're wondering, the association between a Note and its Attachments is based solely on matching file names. In other words, if you wish to delete an attachment by using your operating system to delete the file from the files folder, then that's perfectly ok with Notenik: the next time you open that Collection, Notenik will have no "memory" of that attachment. By the same token, if you wish to use your OS to place a new attachment in the files folder, with a name matching that of a Note, then Notenik will recognize that new file as an attachment for the Note the next time you open that Collection. 


<a name="use-report-templates"><h2>Use Report Templates</h2></a>

Notenik provides a function for merging data from Notes (or other data sources) into a template file in order to create one or more output text files. 

The text files created may be of any type, but certainly one of the most useful formats is html, allowing users to generate one or more Web pages from their notes. 

See the [Merge Template File Spec](https://notenik.net/template-spec.html) for complete information on the expected format of a Merge Template file. 

Template files can be placed in a folder named 'reports' within the Collection folder where the reports are to be used. Each template file should include the word 'template' somewhere within its file name. 

Once a template file is created, suitably named and placed, it will become available as a report that can be selected from a drop-down (identified with a gear icon) on the Collection's toolbar. 

Selecting a report will then cause the Collection's notes to be merged into the corresponding template file, creating whatever ouput is identified in the template file. 

Two other options appear on the Reports Action drop-down (identified with the gear icon). 

- Generate Report Sample in HTML
- Generate Report Sample in Markdown

Selecting one of these will then cause Notenik to create a reports folder for the collection, if one does not already exist, and then to create a report template containing all of the Collection's fields in a basic layout. The user may then modify this template in order to further customize the output formatting.  Once the user reloads the Collection, those reports will then become available to run. 


<a name="record-and-play-scripts"><h2>Record and Play Scripts</h2></a>

Notenik can record and play a script file that will execute a series of data transformations. Data can be input from one or more Notenik Collections and/or from tab-delimited or comma-separated files. The input data can be sorted and filtered using any of the fields contained within the data. The data can then be used as input to a Template file, or output to a new tab-delimited or comma-separated file. 

See the [Merge Script File Spec][script] for a complete description of a Script file. 

Place one or more script files within the reports folder for a Collection, and these files will then become available as Reports. 

Scripts will be executed within a separate Scripter window. You can open this window directly by selecting it from the Window menu. 

The Scripter window can be used for a number of different functions. 

1. Play a script file that already exists. 

2. Start and stop recording of a new script file. 

3. Direct execution of actions to be recorded within a new script file. 

In all of these cases, the scripting actions and results will be displayed within the lower portion of the window. 

The first five fields at the top of the Scripter window — Module, Action, Modifier, Object and Value — correspond directly to the columns in a [Script][] file. These fields should generally be entered from left to right, since earlier selections will modify the options available in later fields. 

The next column, identified with the '@' symbol, allows you to select a local file whose path is to be entered in the Value field. 

The final column, labeled "Go" will cause Notenik to try to execute the command that has been entered into the first five fields, and will record the command, if you are currently recording a Script. 

Note that there are Script commands that can be entered here that will not be found within the Script file spec, since these commands are provided to allow the recording and playing of Script files, but cannot be recursively executed from within a Script file. For these commands, the Module field is 'script'. The available Actions are as follows.

* open — Use the Modifier field to specify either an input or an output file, and use the Value field to specify the location of the script file to be read or written. 

* play — After opening an input file, you can execute the play command to play the Script file previously specified. 

* record — Use this command to begin recording a new Script file after previously opening that file as output. 

* stop — Use this command to stop recording a script. It is at this point that the executed and recorded commands will be written to disk. 



<a name="copy-cut-paste-and-share-your-notes"><h2>Copy, Cut, Paste and Share your Notes</h2></a>

There are several different actions you can perform with individual notes. 

* Copy - Use the Copy command beneath the Edit menu to copy the currently selected Note to the system clipboard. 

* Cut - Use the Cut command beneath the Edit menu to copy the currently selected Note to the system clipboard, and then delete the selected Note. 

* Paste - Use the Paste command beneath the Edit menu to paste a copied or cut Note into the same or a different Collection (or into an email, or any other destination capable of receiving text). 

* Duplicate - Use the Duplicate Note command beneath the Note menu to duplicate the currently selected Note within the same Collection. 

* Share menu command - Use the Share command beneath the Note menu to share the contents of the selected Note with several different options: share the Note's body only, or the entire Note; share in plain text format, or in Markdown format, or as an HTML fragment or as an entire HTML document; and copy the result to the system clipboard, or write the result to an output text file. 

* Share via Toolbar - Use the Share command on the Toolbar to send an entire Note to any of several different destinations (Mail, Message, etc.)

Be aware that the user should be on the Display Tab, and not the Edit tab, in order to perform cut/copy/paste functions since, when on the Edit tab, cut/copy/paste will typically apply to the text within a field, and not to the entire note. 

Also be aware that Note Attachments will not be copied or pasted. 


<a name="import-and-export-your-notes"><h2>Import and Export Your Notes</h2></a>

You can import and export a Collection in a variety of formats, using commands found under the File menu.
Following are the supported formats.

* Import/Export in Notenik Format  

	You can import and export your Notes in the current collection from/to a folder in the same Notenik format.

* Import/Export in Tab-Delimited Format  

	Each Note will be represented as one row/line, and each field will be represented in a separate column. Tabs are used to separate columns. This format is suitable for import into MS Excel, for example.

* Import/Export in CSV Format

	Each Note will be represented as one row/line, and each field will be represented in a separate column. Commas are used to separate columns. This format is suitable for import into MS Excel, for example.

* Export in JSON Format

	Each Note will be represented as one JSON object. 

When exporting the Notes in a Collection, you will be presented with a few options for the export. 

* Output Format: Described above. 

* File extension: Pick from the list or type in a custom extension. 

* Use Tags Export Prefs? Select 'Yes'' if you wish the current Tags Export Prefs to be applied. You may filter the notes to be exported, for any of the output formats (other than the Notenik format), by adjusting the entries in the Tags Export preferences. You may specify one or more Tags to be selected, so that only notes containing those Tags will be exported. You may also suppress one or more Tags, meaning that exported notes will have those Tags removed from the resulting output.

	For example, if you have a collection of blog entries stored as a Collection of Notes, and you have multiple blogs to which they are published, you can specify Tags for the relevant blogs for each note, and then select only those Notes when publishing a particular blog (and suppress the Tags for the other blogs).

	If you leave the Tags to Select field blank, then all Notes will be exported.

	Note that the Tags Export Preferences are global across all Collections. 

* Split Tags? Select 'Yes' if you wish one row to be written for each Tag on each Note. This will result in a special export in which each Note may be written multiple times, once for each Tag in the Note's Tags field. Notes without any Tags will be written only once, with a blank Tag field. In other cases, the Tag field will contain a single Tag, even if the Tags field contains multiple Tags. 

* Add Web Extensions? Select 'Yes' to add a number of fields that can be useful for generating Web pages. 


<a name="favorites-to-html"><h2>Favorites to HTML</h2></a>

If you have a Collection of Notes representing Web Bookmarks, then you may wish to use the 'Favorites' tag (or 'Favourites' for those who prefer the British spelling) to identify the bookmarks you reference most often. You may then use a sub-tag within the 'Favorites' tag to organize your favorite bookmarks into categories. Once you've identified your Favorites, then you may use the Favorites to HTML command under the File menu to create a Web page containing all your favorite bookmarks, organized under headings representing the categories you have chosen. Notenik will display your favorites in four columns, with a maximum of 32 lines per column. Assuming a reasonable number of favorite bookmarks, these will typically display all of your favorites within a single Web page on your Mac. You may then wish to identify the resulting page as the homepage within all of your Web browsers (Safari, Chrome, etc.). 

Note that you can change the Columns per Page, the Rows per Column, and the width of each Column on the Favorites tab of the application Preferences. 


<a name="open-parent-realm"><h2>Open Parent Realm</h2></a>

In addition to the normal Open and Open Recent commands under the File menu, Notenik also has an Open Parent Realm command. 

You may invoke this command to specify a folder containing one or more Collections, and/or one or more Script files. Notenik will scan all likely folders within the parent folder, looking for Notenik Collections and Scripts. Notenik will then display these Collections and Script files within a new window, as if they were Notes within a Collection. You may then click on the Launch Link command in the Toolbar to perform the appropriate action: either opening a Collection within Notenik, or preparing a Script file for execution within the Scripter window. 

Note that the Tags tab will organize these Collections and Scripts by folder, and also by type of link. 


<a name="disk-access-permissions"><h2>Disk Access Permissions</h2></a>

Notenik is a modern, well-mannered Mac application, which means that it does not presume to have free run of your hard drive, roaming wantonly wherever it will. 

In other words, to use Apple's terminology, Notenik is sandboxed. 

At the same time, Notenik does not take all the data you have given it and stash it away in some secret location that only Notenik can access because — well, it's your data. You can store it wherever you like. It's stored in plain sight. You can see it whenever you want. And if you want to open that data using your favorite text editor, then more power to you. Have at it. Knock yourself out. 

These two Notenik traits can sometimes come into conflict, however. If you store your Notenik data in lots of different Collections, and store those Collections in different places, then Notenik may sometimes have trouble getting access to them. 

Here's how this works. 

1. Any Collection folder that you select through the Open command under the File menu will be available to you, because you have explicitly selected it for use by Notenik. 

2. Any Collection folder that you select using the Open Recent command under the File menu will be available to you, because macOS remembers that you previously gave Notenik permission to access that Collection. 

3. If you use the Open Parent Realm command under the File menu to have Notenik search for its Collections and Scripts within a parent folder, then those Collections and Scripts will be available to be opened, because you have explicitly given Notenik permission to access everything within that parent folder. 

(Note that you can also achieve these same results by using the macOS FInder to drag a folder and drop it onto the Notenik app icon.)

In general, the rules above will be enough to cover most situations. If they prove too restrictive, though, you can always grant Notenik full disk access in the Security & Privacy pane of System Preferences. 


<a name="website-building"><h2>Website Building</h2></a>

Note that many of the individual Notenik functions described above can be combined in order to build websites. Create a Collection, add appropriate fields, create template files, record a script, and you can easily generate a set of HTML files that will work together to present a unified website. 

What's more, whenever you add or change or delete any content, you can rerun your script file(s) to regenerate your new website, with everything updated to reflect the latest content. 

As an example, the site at [Notenik.net](https://notenik.net), including this [User Guide](https://notenik.net/swift.html), was generated entirely using Notenik. 


<a name="view-the-log"><h2>View the Log</h2></a>

Under the Window Menu, you'll find an entry for the Log window.
You can usually ignore the Log, but if Notenik is not behaving as you think it should, a look at the Log window can sometimes help determine what is going on. 


<a name="keyboard-shortcuts"><h2>Keyboard Shortcuts</h2></a>

Following are the keyboard shortcuts available within the app. When combined with the CMD key, these keys can be used as handy shortcuts.
* A - Select All
* C - Copy
* E - Open Essential Collection
* F - Find
* G - Find Again
* H - Hide Notenik
* I - Increment Date or Seq
* J - Reload Note
* K - Close Note
* L - Launch Link
* M - Minimize
* N - New Note
* O - Open
* Q - Quit Notenik
* R - View Scripter Window
* S - Save Note
* T - Text Edit Note
* U - Catch Up Daily Tasks
* V - Paste
* W - Close Window
* X - Cut

* 1 - Sort by Title
* 2 - Sort by Seq + Title
* 3 - Sort Tasks by Date
* 4 - Sort Tasks by Seq
* 5 - Sort by Author

* \[ - Prior Note
* \]  - Next Note
* → - Scroll to Selected Note

* '=' - Increase Edit Font Size
* '-' - Decrease Edit Font Size


<a name="files-and-folders"><h2>Files and Folders</h2></a>

Each Collection is stored within its own folder. You may store each Collection wherever you like. You may wish to store one or more of your Collections in a special folder used by a syncing service such as iCloud or Dropbox, in which case your Collection will be synced just like any other files and folders managed by that service.
Within each Collection folder you will find one file for each Note in the Collection, with the file name based closely on the Note's title. 

In addition to the Note files, the following special files and folders may be found within a Collection folder. 

* Each Collection folder will contain a special file named '- INFO.nnk'. This is a plain text file, in Notenik format, containing some handy metadata about the Collection, such as the last sort sequence set for it. If you sync a Collection to other devices using a service such as iCloud or Dropbox, then this metadata will be synced as well. 

* Each Collection folder will also contain a special file named '- README.txt'. This file simply identifies the folder as a Notenik Collection. 

* Each Collection folder will normally also contain a 'template.txt' or 'template.md' file identifying the fields used within the Collection. 

* A 'files' folder will contain any Attachments for the Collection. 

* A 'reports' sub-folder may contain a number of Template files and/or Script files. 


<a name="rights"><h2>Rights</h2></a>

Copyright © 2009 - 2019  by [Herb Bowie](http:/www.herbbowie.com/) doing business as [PowerSurge Publishing](https://www.powersurgepub.com).
The Notenik application is published as  [open source](http://opensource.org/osd) software under the terms of the [MIT License](https://opensource.org/licenses/MIT).

Notenik source code is available on [GitHub](https://github.com/hbowie/notenik-swift).

Notenik makes use of [Down](https://github.com/iwasrobbed/Down) and [cmark](https://github.com/commonmark/cmark), both of which are separately licensed. 

Notenik also makes use of [CoreXLSX](https://github.com/MaxDesiatov/CoreXLSX) to read XLSX files. CoreXLSX is also separately licensed. 


<a name="support"><h2>Support</h2></a>

If you have questions about Notenik, bug reports, or requests for enhancements, please shoot me a note at [support@powersurgepub.com](mailto:support@powersurgepub.com) and I'll try to get back to you as quickly as I can. 


<a name="version-history"><h2>Version History</h2></a>

### Version 2.6.0 | 04 Jan 2020

#### 1. Applied Postel's Law to Note Formats

Notenik is now more liberal in terms of accepting Notes in a wider variety of formats. Plain text notes, Multi-Markdown notes, and Markdown notes will now be accepted, in addition to the defined Notenik format. 


#### 2. Applied Postel's Law to Date Formats

Notenik is now more liberal in terms of the sorts of dates it will parse correctly. Specifically, an 8-digit yyyymmdd date, without any punctuation, should now be correctly parsed. 


### Version 2.5.0 | 29 Dec 2019

#### 1. Fixed a few other bugs

A few more code improvements. 


#### 2. Fixed bug in identifying the Info file

Corrected a bug that could sometimes cause a legitimate note to be misidentified as the collection's info file. 


#### 3. Added JSON Export and Sharing

A note can now be shared in JSON format, and a collection can be exported in JSON. 


#### 4. Enabled Spelling Checker on Body text

Spelling will now be checked in the Body field. 


#### 5. Added Reload Note Command

The Note menu now contains a Reload Note command, which will reload the currently selected Note from disk. This is useful after using an external editor to modify a Note on disk. 


### Version 2.4.0 | 13 Dec 2019

#### 1. Added Startup Check

Added a logic check to see if the app completed a successful launch the last time it was run. If not, then the application resets the user preferences to avoid a recurring crash. 


#### 2. Added Note-to-Note Linking

Wiki-style links between Notes within a Collection are now supported. Several related pieces of functionality work together to enable this capability. 

* The Collection Preferences pane now includes a checkbox for "Double Bracket Parsing for Inter-Note Links". Turning this option on for a particular Collection allows the user to begin adding links between Notes. 

* Once this option is enabled, the body of a Note may include a link to another Note by enclosing the title of that other Note within double square brackets. 

* A new Variable Modifier of 'W' available in Merge Templates allows these inter-note pointers to be converted to usable links when generating HTML. 


### Version 2.3.0 | 10 Dec 2019

#### 1. Fixed Treatment of Teaser Field

Modified to treat the Teaser field as longtext.


#### 2. Increased Tolerance for Notes with Alternative Formatting

Some note-takers start their text files with lines such as the following. 

	# Note Title
	#tag
	Body starts here. 

Notenik will now recognize the first line of such a file as containing the Note's title, and will recognize the second line as containing a tag for the Note. 

Also, bracket characters and parentheses preceding a colon will now indicate to Notenik that such text should not be treated as a field label. 


#### 3. Added Timestamp Field

A Timestamp field can be used to generate a timestamp for each note, in a "yyyyMMddkkmmss" format, consisting of:

* 4-digit year
* 2-digit month
* 2-digit day of month
* hour of day, using a 24-hour range
* minute of hour
* second of minute

All of this is normalized to Greenwich Mean Time, and formatted without spaces or punctuation. 


#### 4. Ink Added as another Markdown Parser Option

Down is the default, but you can switch to Ink on the new Markdown tab within the Application Preferences. 


### Version 2.2.0 | 04 Dec 2019

#### 1. Fixed Bug in Persisting the Sort Reverse Setting

Notenik had been resetting the Reverse setting each time a Collection was opened. 


#### 2. Eliminated Option to Generate Sample Reports for Help Notes

App Store testers correctly pointed out that selecting this option for the Help Notes would cause a crash. 


#### 3. Suppressed Empty Tags from Favorites to HTML Export

You can sometimes end up with empty tags in a collection, as a result of deleting notes or changing tags. Previously these would be included when creating a Favorites page, but they are now suppressed. 


#### 4. Moved Reload Collection Command from File Menu to Collection Menu

The Reload Collection command will hopefully be easier to find beneath the Collection menu. 


#### 5. Added Support for 'Favourites' in addition to 'Favorites'

Based on feedback from a user in Australia, added support for the British spelling of 'Favourites'. 


#### 6. Added Cut, Copy and Paste Support for Notes

The Cut, Copy and Paste commands — along with their corresponding keyboard shortcuts — are now enabled on the Edit menu for Notes. After selecting a Note, the Cut or Copy commands may be used to cut/copy the entire note. The note is copied to the clipboard as text, so that it can then be pasted into any application where text is accepted — including, but not limited to, Notenik itself. Be aware that the user should be on the Display Tab, and not the Edit tab, in order to perform these note-based functions since, when on the Edit tab, cut/copy/paste will typically apply to the text within a field, and not to the entire note. 


### Version 2.1.0 | 22 Nov 2019

#### 1. Added Tags Mass Change Option

Beneath the Collection menu an option has been added to perform a Tags Mass Change. The user will be prompted to specify from tags and to tags, and Notenik will then replace the from tags (in combination, if more than one is specified) with the to tags. 


#### 2. Added Launch Link Menu Command and Keyboard Shortcut

The Menu command can be found beneath the Note menu. The keyboard shortcut is CMD-L. 


#### 3. Added Favorites Tab to Notenik Preferences

The user can now change the Columns per Page, the Rows per Column, and the width of each Column on the Favorites tab of the application Preferences. 


### Version 2.0.0 | 15 Nov 2019

#### 1. Added New Scripter Input Modifier to Split Tags for Notenik Input

When reading input data via the Scripter window, the user may now specify a modifier of 'notenik-split-tags' to add a 'Tag' field, and then return one row for each tag assigned to each note (or one row with a blank tag, for notes with no tags). 


#### 2. Enabled Template Set Command operand of ++

A Template Set command will now honor an operand of '++' and increment the indicated variable by a value of 1. 


### Version 1.9.0 | 11 Nov 2019

#### 1. Fixed a Note Delete Bug

A note that was being deleted would sometimes be immediately re-added. This has been corrected. 


#### 2. Fixed an Attachments Bug

Attachments were being deleted when the parent Note's title was changed. This has now been corrected. 


#### 3. Added Option to Reverse the Sort

An option has been added to the Sort menu that will allow the user to reverse the current sequence of the list (from ascending to descending, or vice-versa).


#### 4. Scripter Can Now Read Markdown Headers

Added a new input format to read a Markdown file and chunk it up into sections, based on its headers. Each resulting row of data will consist of fhe following fields:

* Title - The text content of the header
* Level - The level of the header (1 - 6)
* Body - All of the text following the header, up to the next header. 

Note that the resulting data can be used to generate a Table of Contents for the Markdown file, using an appropriately formatted template. 


### Version 1.8.0 | 06 Nov 2019

#### 1. Folder Open thru Finder Drag-and-Drop Enabled

Folder(s) may now be opened by dragging them onto the Notenik icon in the Finder. Notenik will respond in one of four ways to each Finder item. 

* If a folder contains an existing Notenik Collection, then that Collection will be opened in a new window. 
* If a folder is empty, then it will be initialized as a new Notenik Collection, and opened in a new window. 
* if the dragged item is not a folder at all, then an error message will be displayed. 
* Any other folder will be treated as a parent realm, and the resulting window will show Collections and Scripts found within that realm. 


#### 2. Changed Deployment Target Back to 10.14 to Allow Operation on Mojave

The last release inadvertently made Notenik unavailable to Mojave users. 


#### 3. Reports Option Added to Generate Sample Report Templates

When the user pulls down the Reports Action menu from the Toolbar, the first two items they see will now be:

- Generate Report Sample in HTML
- Generate Report Sample in Markdown

Selecting one of these will then cause Notenik to create a reports folder for the collection, if one does not already exist, and then to create a report template containing all of the Collection's fields in a basic layout. The user may then modify this template in order to further customize the output formatting. 


### Version 1.7.0 | 31 Oct 2019

#### 1. Markdown Applied to all Long Text fields

Markdown is now used to format all longtext fields as they appear on the Display tab.


#### 2. Internal Refactoring

Made some internal changes to handle field types in a way that will better lend itself to future growth. 


#### 3. Additional Minor Improvements

Made a few more minor improvements. 


#### 4. Added Notenik Rate/Review Reminder

Added code to remind users to rate and review Notenik on the Mac App Store. 


### Version 1.6.0 | 15 Oct 2019

#### 1. Various Minor Tweaks

Made a number of tweaks to fix bugs and/or improve operation. 


#### 2. Textile Parser Added

A homegrown "good enough" Textile Parser has been added to Notenik. It can be invoked by including a file with a '.textile' file extension when generating HTML output. 


#### 3. Template Include File Conversion Honored

When using the Include command within a Scripting Template file to include another file, automatic conversion will now be done when the included file extension differs from the output file extension. In particular, Markdown and Textile documents will be converted to HTML, when appropriate. Note that the Textile parser used is one internal to Notenik, and is at best a "good enough" tool, but one that is far from comprehensive. 


#### 4. Seq Field Prefix Now Honored

Field names beginning with "Seq" will now be treated as Seq fields for the purpose of sorting when using the Scripting Engine. This will cause numeric fields, for example, to sort into their proper numeric sequence, instead of treating them as alphanumeric fields. 


### Version 1.5.0 | 20 Sep 2019

#### 1. Enhanced Logic for Incrementing the Seq Field

Made some improvements in the logic for incrementing the Seq field to properly increment following Notes to prevent overlap. 


#### 2. Additional Refinements

Fixed a bug that sometimes caused newline characters to be ignored when trying to load a Note from disk. 


#### 3. Added a Dash as a New Variable Modifier

A dash may now optionally follow the letter O, which will result in the html string produced by the Markdown conversion having opening and closing paragraph tags stripped from the resulting string. 


#### 4. Added Special Treatment for Artist Field

A field name of Artist will now be used as an alternate to Author when sorting by Author. A leading 'The' will be ignored, and values will be sorted as if they were all lower case. 


#### 5. Added <longtext> option to Template file

By specifying the value \<longtext\> as the value for a field in a template file, the user can now indicate that a field is to be a long text field, rather than a one-line text field. 


### Version 1.4.1 | 08 Sep 2019

#### 1. Added Checks Before Completing Save As

The Save As command relies on the user creating a new folder to receive the copied contents of the current Collection. It then deletes the folder in order to take advantage of a native macOS command to copy the existing folder to the new location. However, this logic would allow the user to select an existing folder, containing other contents, and would then delete it. Notenik has been modified to make sure that the requested recipient of a Save As command is actually empty, before copying the old Collection to that (presumed new) location. The program is also now making an additional check to ensure the user doesn't try to make his entire Desktop folder a Notenik Collection (even if it is empty). 


### Version 1.4.0 | 03 Sep 2019

#### 1. Work Type now uses a Combo Box

When a Collection (typically, of quotations) has a 'Work Type' field, then Notenik will now present a standard, selectable list of options to choose from using what is known as a "Combo Box" control for editing. 


#### 2. Improved Collection Load Speed

Improved the speed of opening a new Collection by optimizing the sorting of Notes as they are loaded into memory. 


#### 3. Miscellaneous Improvements

A few minor bug fixes and minor improvements. 


#### 4. Added Script File Recording

Notenik can now be used to record script files, as well as play them back. 


### Version 1.3.0 | 13 Aug 2019

#### 1. Added Script File Playback

Users can now play a Script file that will run a series of data transformations. 


#### 2. Added Attachments Function

Each Note can have one or more Attachments. 


#### 3. Bug Fixes and Minor Improvements



#### 4. Added Tags Export Preferences

This new Notenik Preferences tab allows the user to specify tags to select and tags to suppress. 


### Version 1.2.0 | 11 Jul 2019

#### 1. Tokenized the Tags Field on the Edit Screen

Users can now pick from previously identified tags when entering a new one. 


#### 2. Bug Fixes and Improvements

Markdown conversion now renders embedded HTML and does a smart typographic conversion.

Occasional problem with erroneous blanks in the ‘X’ column (indicating done or not) is now fixed.


#### 3. Added Standardize Dates to YMD to the Collection Menu

Execution of this command will change all the dates in all the Notes for the current Collection so that they are stored in yyyy-mm-dd format, which can be useful to ensure than an export file sorts correctly on date. 


#### 4. Added Split Tags Export to the File Menu

The Split Tags command under the File menu will split the tags for each Note, and write one output row for each Tag for each Note. Notes without tags will be written out only once; Notes with multiple tags will be written out once for each Tag. In addition to the Tags column, a Tag (singular) column will be added to the front of each row, containing one particular Tag for the Note. This export file can be used, for example, to create an index page for each Tag. 


### Version 1.1.0 | 05 Jul 2019

#### 1. Various Bug Fixes and Improvements

Miscellaneous bug fixes and improvements. 


#### 2. Added Reports Function

Merge Templates may now be created, stored in a reports folder, and then run from a Collection's Toolbar. 


#### 3. Added Favorites to HTML Function

The File Menu now has a new command to export Favorites to HTML. This allows the user to identify favorite bookmarks using the 'Favorites' tag and then export those favorites to a four-column Web page. 


### Version 1.0.0 | 03 Jun 2019

#### 1. Initial Release

This is the initial release of Notenik written in Swift.

